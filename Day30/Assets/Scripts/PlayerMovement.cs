using System;using Unity.VisualScripting;using UnityEngine;using UnityEngine.UI;public class PlayerMovement : MonoBehaviour{    private Vector2 playerPos; // x와 y를 동시에 지닌 자료형    private Vector3 playerPos3; // x,y,z를 기억시켜야 할때    private Rigidbody2D rigid; //  껍데기    private void OnTriggerEnter2D(Collider2D other)    {        // 게임이 끝났음        GameManager.IsGameOver = true;        // 오브젝트 중 GameOverText 찾고, 그 오브젝트에서 Text 컴포넌트 찾아서 enabled로        GameObject.Find("GameOverText").GetComponent<Text>().enabled = true;    }        // Start is called before the first frame update    void Start()    {        // 초기 위치값 세팅        // playerPos.x = 0;         // playerPos.y = -3;                // GetComponent <- 가져와서 제어할 컴포넌트 이름        // GetComponent<Transform>();        // GetComponent<SpriteRenderer>();        rigid = GetComponent<Rigidbody2D>();                // Trnasform 같은 경우는 모든곳에서 쓰기 때문에 그냥 쓸수있었음. 다른건 아닌듯?    }    // Update is called once per frame    void Update()    {        // 특정 키가 안눌려 있으면 false, 누름 유지중이면 true 반환        // Input.GetKey()        // 누를때        // Input.GetKeyDown();                // 키를 뗄때        // Input.GetKeyUp();        if (GameManager.IsGameOver)        {            return;        }                if(Input.GetKey(KeyCode.LeftArrow))        {            // playerPos.x -= 0.001f;            rigid.AddForce(new Vector2(-0.5f, 0));                        // transform -> 그냥 위치, 회전 등의 형태, 포지션을 강제로 바꾸면 적용            // rigidbody -> 물리, 중력등 자연스럽게 힘을줘서 밀리는 형태 구현 가능                    }                if(Input.GetKey(KeyCode.RightArrow))        {            rigid.AddForce(new Vector2(0.5f, 0));            // playerPos.x += 0.001f;        }                // transform 안에 있는 포지션을 통채로 갈아끼움        // rigidbody 적용해도, 여기서 덮어 쓰기 때문에 적용이 안됨        // transform.position = playerPos;                    }}